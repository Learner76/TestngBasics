
Regarding --------------------------Set up--------------------------------
Created maven project, as Testng has multiple transitive jar dependancy. Difficult to add externally.
Use Archetype:quickstart to get maven project structure and pom.xml.
Added Testng Dependancy in POM.xml and maven reload.
Add run configuration, Add Testng plugin and create configuration.
Create basic class and run.

Regarding ---------------------------<test> vs @Test-----------------------
@Test denotes single test, where in <test> has bigger scope, it can group @test from
multiple classes and run them together. so <test> is a big container.


Regarding ---------------------------Reports-------------------------------
TestNG Default Reports are focused on Test Execution, not Fixtures.
Hence HTMLReporter or TestNGReport will not have any logs from Before and Methods. DO remember this.
Reproter.log() also have same behaviour if used in @Before or @After method, will not log in final Report.
So that reason we can use customer listner.

Regarding -------------------------Testng.xml---------------------------------
Suite->Test -->Classes ->Class order for basic xml.
<suite name ="abc">
    <test name ="def">
        <classes>
            <class name="org.example.Ex_1_Testng_basic">
            </class>
        </classes>
    </test>
</suite>

Regarding ---------------------------------Parallel-----------------------------------------
TestNG allows running the tests in parallel by setting the “parallel” attribute in the “<suite>” tag
respectively to “tests”, “methods”, “classes”, “instances”.
As per the setting provided to run the tests, it will start executing the tests in
separate threads.

Regarding----------------------------------Depedency injection----------------------------------------
https://www.tutorialspoint.com/how-to-retrieve-test-method-description-in-testng-before-and-after-execution

TestNG supports native dependency injection. It allows to declare additional parameters
in methods. At runtime, TestNG automatically fills these parameters with the correct
values. Following is a set of native dependencies in TestNG −

ITestContext
XmlTest
Method
ITestResult

i.e you can declare before method like this. See Method parameter here. so Testng exeuction engine will create
method object and pass it while calling set up method.
  @BeforeMethod
        public void setup(Method method){}


Details :
Annotation	ITestContext	XmlTest	Method	ITestResult
BeforeSuite	Yes	No	No	No
BeforeTest	Yes	Yes	No	No
BeforeGroups	Yes	Yes	No	No
BeforeClass	Yes	Yes	No	No
BeforeMethod	Yes	Yes	Yes	Yes --------------all yes.
Test	Yes	No	No	No
AfterMethod	Yes	Yes	Yes	Yes  -----------------all yes.
AfterClass	Yes	Yes	No	No
AfterGroups	Yes	Yes	No	No
AfterTest	Yes	Yes	No	No
AfterSuite	Yes	No	No	No





--------Extent Reports-------------